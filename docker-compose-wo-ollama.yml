name: pgai_rag_demo

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.app
    container_name: rag_app
    extra_hosts:
      - "host.docker.internal:host-gateway"    
    environment:
      # Ensure your app uses http://host.docker.internal:11434 for Ollama
      OLLAMA_HOST: "http://host.docker.internal:11434"      
    restart: always
    ports:
      - "8501:8501"
    env_file:
      - .env
    networks:
      - rag_network
    depends_on:
      - postgres

  postgres:
    build:
      context: .
      dockerfile: Dockerfile.pg
    container_name: pgai_postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: pgai_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    command: [ "-c", "ai.ollama_host=http://host.docker.internal:11434" ]
    networks:
      - rag_network

  vectorizer-worker:
    image: timescale/pgai-vectorizer-worker:latest
    container_name: pgai_vectorizer_worker
    environment:
      # Update the DB URL to match the postgres service credentials and hostname.
      PGAI_VECTORIZER_WORKER_DB_URL: "postgres://postgres:password@postgres:5432/pgai_db"
      OLLAMA_HOST: "http://host.docker.internal:11434"
    extra_hosts:
      - "host.docker.internal:host-gateway"  
    command: [ "--poll-interval", "5s", "--log-level", "DEBUG" ]
    networks:
      - rag_network

volumes:
  postgres_data:

networks:
  rag_network:
    driver: bridge